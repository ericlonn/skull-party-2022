[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "Fill_Color"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 5

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform vec4 Fill_Color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = Fill_Color.rgb;
	float n_out2p1 = Fill_Color.a;

// Input:4

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, UV.xy);
		n_out5p0 = TEXTURE_tex_read.rgb;
		n_out5p1 = TEXTURE_tex_read.a;
	}

// ScalarOp:6
	float n_out6p0 = n_out5p1 * n_out2p1;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -468.546, -152.231 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 120 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -640, 140 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -780, -100 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -480, -120 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 0, -100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 4, 0, 5, 2, 5, 1, 6, 0, 2, 1, 6, 1, 6, 0, 0, 1 )
